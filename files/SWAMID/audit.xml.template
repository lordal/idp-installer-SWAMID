<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

    default-init-method="initialize"
    default-destroy-method="destroy">

    <!--
    This bean defines a mapping between audit log categories and formatting strings. The default entry is
    for compatibility with V2 audit logging.

    IdP-Installer addition: Shibboleth-Audit-FTICKS
    -->
    <util:map id="shibboleth.AuditFormattingMap">
        <entry key="Shibboleth-Audit" value="%T|%b|%I|%SP|%P|%IDP|%bb|%III|%u|%ac|%attr|%n|%i" />
        <entry key="Shibboleth-Audit-FTICKS" value="F-TICKS/%{idp.fticks.federation}/1.0#TS=%T#RP=%SP#AP=%IDP#PN=%HASHEDu#AM=%ac#" />
    </util:map>

    <!-- Allows auditing to be disabled selectively for particular profiles/flows. -->
    <util:list id="shibboleth.AuditSuppressedProfiles">
        <value>http://shibboleth.net/ns/profiles/status</value>
    </util:list>

    <!--
    The beans below need to be defined, even if left empty. They can be ignored in most cases.
    
    If you write your own function to extract a new piece of data for auditing, you can install it into one or more
    of the maps below to add it to the auditing framework, keyed by an audit field label to be used in formatting.
    -->
   <!-- 
   	IdP-Installer addition: added new bean customContribution.hashUsername to mask users Subject identifiers in F-TICKS logging 
	Note:   If entityID is not included in the salt or appended somehow to the Subject 
		F-TICKS records from two different IdPs could result in overlapping anonymous identifiers if they use the same salt
     -->
<bean id="customContribution.hashUsername" class="com.google.common.base.Functions" factory-method="compose">
                <constructor-arg name="g">
                        <bean class="net.shibboleth.utilities.java.support.codec.StringDigester"
                                c:algorithm="SHA-256" c:format="HEX_LOWER" p:salt="%{idp.fticks.salt}" />
                                </constructor-arg>
                                <constructor-arg name="f">
                                        <bean class="com.google.common.base.Functions" factory-method="compose">
                                <constructor-arg name="g">
                                        <bean class="net.shibboleth.idp.authn.context.navigate.SubjectContextPrincipalLookupFunction" />
                                </constructor-arg>
                                <constructor-arg name="f">
                                        <ref bean="shibboleth.ChildLookup.SubjectContext" />
                                </constructor-arg>
                        </bean>
		</constructor-arg>
</bean>
<!-- IdP-Installer end of edit -->

    <bean id="shibboleth.PostDecodeAuditExtractors" parent="shibboleth.DefaultPostDecodeAuditExtractors" lazy-init="true">
        <property name="sourceMap">
            <map merge="true">
            </map>
        </property>
    </bean>

    <bean id="shibboleth.PostLookupAuditExtractors" parent="shibboleth.DefaultPostLookupAuditExtractors" lazy-init="true">
        <property name="sourceMap">
            <map merge="true">
            </map>
        </property>
    </bean>

<!-- 	IdP-Installer addition: added new entry key HASHEDu into map for use in F-TICKS.
	Note: If you add this in other maps, it will MERGE to the existing one resulting 2 values comma separated of the same thing(not good) 
-->

    <bean id="shibboleth.PostAssertionAuditExtractors" parent="shibboleth.DefaultPostAssertionAuditExtractors" lazy-init="true">
        <property name="sourceMap">
            <map merge="true">
	<entry key="HASHEDu">
		<ref bean="customContribution.hashUsername" />
	</entry>

            </map>
        </property>
    </bean>
<!-- IdP-Installer end of edit -->

    <bean id="shibboleth.PostResponseAuditExtractors" parent="shibboleth.DefaultPostResponseAuditExtractors" lazy-init="true">
        <property name="sourceMap">
            <map merge="true">
            </map>

        </property>
    </bean>
    
    <bean id="shibboleth.LogoutAuditExtractors" parent="shibboleth.DefaultLogoutAuditExtractors" lazy-init="true">
        <property name="sourceMap">
            <map merge="true">
            </map>
        </property>
    </bean>

    <bean id="shibboleth.ErrorViewAuditExtractors" parent="shibboleth.DefaultErrorViewAuditExtractors" lazy-init="true">
        <property name="sourceMap">
            <map merge="true">
            </map>
        </property>
    </bean>
    
</beans>
